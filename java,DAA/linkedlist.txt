
import java.util.*;
class Node{
    int data;
    Node next;
    public Node(int data){
        this.data = data;
        this.next = null;
    }
    public void display(){
        System.out.println(data);
    }
}
class linkedlist{
    public Node append(Node hptr,int d){
        if(hptr == null){
            Node temp = new Node(d);
            hptr = temp;
        }
        else{
            Node temp = hptr;
            while(temp.next!=null){
                temp = temp.next;
            }
            Node nptr = new Node(d);
            temp.next = nptr;
        }
        return hptr;
    }
    public void display(Node temp){
        while(temp!=null){
            temp.display();
            temp = temp.next;
        }
    }
    public Node  reverse(Node temp){
        Node prev = null;
        Node n ;
        while(temp!=null){
            n = temp.next;
            temp.next = prev;
            prev = temp;
            temp = n;
        }
        return prev;
    }
    public Node merge(Node l1,Node l2){
        if(l1 == null) return l2;
        if(l2 == null) return l1;
        if(l1.data<=l2.data){
            l1.next = merge(l1.next,l2);
            return l1;
        }
        else{
            l2.next = merge(l1,l2.next);
            return l2;
        }
    }
    public Node  sort(Node l1){
        Node n ;
        Node v = l1;
        int temp;
        if(l1 == null){
            return v;
        }
        else{
            while(l1!= null){
                n = l1.next;
                while(n!= null){
                    if(l1.data>n.data){
                        temp = l1.data;
                        l1.data = n.data;
                        n.data = temp;
                    }
                    n = n.next;
                }
                l1 = l1.next;
            }
            return v;
        }
    }
}
class Main{
    public static void main (String[] args) {
        Scanner sc = new Scanner(System.in);
        linkedlist l = new linkedlist();
        linkedlist v = new linkedlist();
        int n  = sc.nextInt();
        int N = sc.nextInt();
        Node head1 = null;
        Node head2 = null;
        for(int i=0;i<n;i++){
            int d = sc.nextInt();
           head1 =  l.append(head1,d);
        }
        for(int i=0;i<N;i++){
            int d = sc.nextInt();
            head2 = v.append(head2,d);
        }
        Node head = l.merge(head1,head2);
        Node head3 = l.sort(head);
        l.display(head3);
    }
}